---
- name: Ensure dependencies are installed.
  ansible.builtin.apt:
    name:
      - curl
      - apt-transport-https
      - gnupg
    state: present

- name: Add Jenkins apt repository key.
  ansible.builtin.get_url:
    url: "{{ jenkins_repo_key_url }}"
    dest: /etc/apt/trusted.gpg.d/jenkins.asc
    mode: '0644'
    force: true

- name: Add Jenkins apt repository.
  ansible.builtin.apt_repository:
    repo: "{{ jenkins_repo_url }}"
    state: present
    update_cache: true
  when: jenkins_repo_url | default(false)
  tags: ['skip_ansible_lint']

- name: Download specific Jenkins version.
  ansible.builtin.get_url:
    url: "{{ jenkins_pkg_url }}/jenkins_{{ jenkins_version }}_all.deb"
    dest: "/tmp/jenkins_{{ jenkins_version }}_all.deb"
  when:
    - jenkins_version is defined
    - not jenkins_repo_url | default(false)

- name: Check if we downloaded a specific version of Jenkins.
  ansible.builtin.stat:
    path: "/tmp/jenkins_{{ jenkins_version }}_all.deb"
  register: specific_version
  when:
    - jenkins_version is defined
    - not jenkins_repo_url | default(false)

- name: Install our specific version of Jenkins.
  ansible.builtin.apt:
    deb: "/tmp/jenkins_{{ jenkins_version }}_all.deb"
    state: present
  when:
    - jenkins_version is defined
    - not jenkins_repo_url | default(false)
    - specific_version.stat.exists
  notify: configure default users

- name: Configuring APT preferences to set jenkins version in desired version
  ansible.builtin.copy:
    content: |
      # Ansible managed
      Package: jenkins
      Pin: version {{ jenkins_version }}
      Pin-Priority: 999
    dest: /etc/apt/preferences.d/jenkins_hold_version.pref
  when: jenkins_version is defined

- name: Ensure Jenkins is installed.
  ansible.builtin.apt:
    name: jenkins{% if jenkins_version is defined %}={{ jenkins_version }}{% endif %}
    state: "{{ jenkins_package_state }}"
  notify: configure default users
  when: jenkins_repo_url | default(false)

- name: get jenkins version if not set
  ansible.builtin.package_facts:
    manager: "auto"
  when: jenkins_version is not defined
  check_mode: false

- name: set jenkins installed package version
  ansible.builtin.set_fact:
    installed_jenkins_version: "{{ ansible_facts.packages.jenkins[0].version }}"
  when: jenkins_version is not defined
  check_mode: false

- name: Configuring APT preferences to set jenkins version on installed version
  ansible.builtin.copy:
    content: |
      # Ansible managed
      Package: jenkins
      Pin: version {{ installed_jenkins_version }}
      Pin-Priority: 999
    dest: /etc/apt/preferences.d/jenkins_hold_version.pref
  when: jenkins_version is not defined
